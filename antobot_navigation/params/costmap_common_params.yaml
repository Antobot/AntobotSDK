###########################################################################################################################
# Copyright (c) 2023, ANTOBOT LTD.
# All rights reserved.

# Description: This is a .yaml file where the local and global costmap parameters are defined
# Contact:      soyoung.kim@antobot.ai

##################################################################################################################

#beyond this distance (in meters), the obstacle will not be put into the costmap.
obstacle_range: 10   # in real it's 10 m, but that reduces the complexity

#The range at which sensor data is kept at higher resolution.
raytrace_range: 12.0

#The maximum height of any obstacle to be inserted into the costmap in meters. This parameter should be set to be slightly higher than the height of your robot.
max_obstacle_height: 3.0 #meters

footprint: [[-0.62, -0.44], [0.62, -0.44], [0.62, 0.44], [-0.62, 0.44]]
#footprint_padding: 0.05
#footprint: [[-0.36, -0.5], [0.36, -0.5], [0.36, 0.5], [-0.36, 0.5]]
robot_radius: 0.1 # robot radius should be small as 0.1 for updated Lathcoats 


#map_type: costmap

#recovery_behaviors: [{name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery}, {name: rotate_recovery, type: rotate_recovery/RotateRecovery}, {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}] 

#The static map layer represents a largely unchanging portion of the costmap, like those generated by SLAM.
static_layer:
    enabled: false
    map_topic: /map 
    subscribe_to_updates: true

#The obstacle layer tracks the obstacles as read by the sensor data.    
obstacle_layer:
    enabled: true
    combination_method: 1
    observation_sources: front_laser_scan_sensor  point_cloud_sensor_front point_cloud_sensor_back
    front_laser_scan_sensor: {sensor_frame: laser, data_type: LaserScan, topic: /scan, marking: true, clearing: true, min_obstacle_height: -5.0, max_obstacle_height: 5.0, inf_is_valid: true, obstacle_range: 5.0, raytrace_range: 6.0}
    #point_cloud_sensor: {sensor_frame: zed2_left_camera_optical_frame, data_type: PointCloud2, topic: /mobile_base/zed2/point_cloud/cloud_registered, marking: true, clearing: true, min_obstacle_height: 0.5, max_obstacle_height: 5.0, obstacle_range: 5.0, combination_method: 0, raytrace_range: 6.0}
    point_cloud_sensor_front: {sensor_frame: zed2_front_left_camera_frame, data_type: PointCloud2, topic: /pointcloud/filtered/front, marking: true, clearing: true, min_obstacle_height: -0.2, max_obstacle_height: 0.5, obstacle_range: 5.0, raytrace_range: 6.0}
    point_cloud_sensor_back: {sensor_frame: zed2_back_left_camera_frame, data_type: PointCloud2, topic: /pointcloud/filtered/back, marking: true, clearing: true, min_obstacle_height: -0.2, max_obstacle_height: 0.5, obstacle_range: 5.0, raytrace_range: 6.0}

# inflation radius and cost scaling factor are the parameters that determine
# the inflation. inflation radius controls how far away the zero cost point is from the obstacle. 
#cost scaling factor is inversely proportional to the cost of a cell.
# Setting it higher will make the decay curve more steep.
inflation_layer:
    enabled: true
    cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
    inflation_radius:   0.2  # max. distance from an obstacle at which costs are incurred for planning paths.


